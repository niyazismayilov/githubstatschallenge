// Generated by Dagger (https://dagger.dev).
package com.niyazismayilov.githubrepostats.di.module;

import com.niyazismayilov.githubrepostats.data.api.IApi;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideApiFactory implements Factory<IApi> {
  private final AppModule module;

  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ProvideApiFactory(AppModule module, Provider<Retrofit> retrofitProvider) {
    this.module = module;
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public IApi get() {
    return provideApi(module, retrofitProvider.get());
  }

  public static AppModule_ProvideApiFactory create(AppModule module,
      Provider<Retrofit> retrofitProvider) {
    return new AppModule_ProvideApiFactory(module, retrofitProvider);
  }

  public static IApi provideApi(AppModule instance, Retrofit retrofit) {
    return Preconditions.checkNotNull(instance.provideApi(retrofit), "Cannot return null from a non-@Nullable @Provides method");
  }
}
