// Generated by Dagger (https://dagger.dev).
package com.niyazismayilov.githubrepostats.di.module;

import com.niyazismayilov.githubrepostats.data.IDataManager;
import com.niyazismayilov.githubrepostats.ui.activity.MainActivityViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ActivityModule_ProvideFeedViewModelFactory implements Factory<MainActivityViewModel> {
  private final ActivityModule module;

  private final Provider<IDataManager> dataManagerProvider;

  public ActivityModule_ProvideFeedViewModelFactory(ActivityModule module,
      Provider<IDataManager> dataManagerProvider) {
    this.module = module;
    this.dataManagerProvider = dataManagerProvider;
  }

  @Override
  public MainActivityViewModel get() {
    return provideFeedViewModel(module, dataManagerProvider.get());
  }

  public static ActivityModule_ProvideFeedViewModelFactory create(ActivityModule module,
      Provider<IDataManager> dataManagerProvider) {
    return new ActivityModule_ProvideFeedViewModelFactory(module, dataManagerProvider);
  }

  public static MainActivityViewModel provideFeedViewModel(ActivityModule instance,
      IDataManager dataManager) {
    return Preconditions.checkNotNull(instance.provideFeedViewModel(dataManager), "Cannot return null from a non-@Nullable @Provides method");
  }
}
