// Generated by Dagger (https://dagger.dev).
package com.niyazismayilov.githubrepostats.di.module;

import com.niyazismayilov.githubrepostats.data.IDataManager;
import com.niyazismayilov.githubrepostats.ui.fragment.favlist.FavoriteListViewModel;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentBuilderModule_ProvideFavoriteViewModelFactory implements Factory<FavoriteListViewModel> {
  private final FragmentBuilderModule module;

  private final Provider<IDataManager> dataManagerProvider;

  public FragmentBuilderModule_ProvideFavoriteViewModelFactory(FragmentBuilderModule module,
      Provider<IDataManager> dataManagerProvider) {
    this.module = module;
    this.dataManagerProvider = dataManagerProvider;
  }

  @Override
  public FavoriteListViewModel get() {
    return provideFavoriteViewModel(module, dataManagerProvider.get());
  }

  public static FragmentBuilderModule_ProvideFavoriteViewModelFactory create(
      FragmentBuilderModule module, Provider<IDataManager> dataManagerProvider) {
    return new FragmentBuilderModule_ProvideFavoriteViewModelFactory(module, dataManagerProvider);
  }

  public static FavoriteListViewModel provideFavoriteViewModel(FragmentBuilderModule instance,
      IDataManager dataManager) {
    return Preconditions.checkNotNull(instance.provideFavoriteViewModel(dataManager), "Cannot return null from a non-@Nullable @Provides method");
  }
}
